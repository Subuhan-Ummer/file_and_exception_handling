# -*- coding: utf-8 -*-
"""file_and_exception_handling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14vNQnGMP07U1NOTkAxNXFw10V0NdSUwf
"""

#Exercise 1: Write a python program to read a file and display its contents

def read_file(file_path):
  try:
    with open(file_path, 'r') as file:
      contents = file.read()
      print(contents)
  except FileNotFoundError:
    print("The specified file does not exist.")


#usage
read_file('/content/python_program.txt')

#Exercise 2: write a python program to copy the contents of one file to another file

def copy_file(source_file, destination_file):
  try:
    with open(source_file, 'r') as src, open(destination_file, 'w') as dest:
      dest.write(src.read())
    print("File copied successfully.")
  except FileNotFoundError:
    print("Source file not found")

#usage
copy_file('/content/python_program.txt', '/content/python_program_copy.txt')

#Exercise 3: write a python program to read the content of a file and count the total number of words in that file.

def count_words_in_file(file_path):
  try:
    with open(file_path, 'r') as file:
      contents = file.read()
      words = contents.split()
      print("Total number of words : ", len(words))
  except FileNotFoundError:
    print("The specified file does not exist.")

#usage
count_words_in_file('/content/python_program.txt')

#Exercise 4: write a python program that prompts the user to input a string and converts it to an integer.
#Use try_except blocks to handle any exception that might occur.

def convert_to_integer():
  try:
    user_input = input("Enter a number : ")
    number = int(user_input)
    print("You entered : ", number)
  except ValueError:
    print("Invalid input! Please enter an integer.")


#usage
convert_to_integer()

#Exercise 5: write a python program that prompts the user to input a list of integers and raises an exception
#if any of the ingeres in the list are negative.

def check_positive_integers():
  try:
    user_input = input("Enter a list of integers separated by space : ")
    numbers = list(map(int, user_input.split()))
    for num in numbers:
      if num < 0:
        raise ValueError("Negative integer found!")
    print("All numbers are non-negative.")
    print("List of integers : ", numbers)
  except ValueError as e:
    print(e)

#usage
check_positive_integers()

#Exercise 6: python program that prompts the user to input a list of integers and computes the average of those integers.
#use try-except blocks to handle any exceptions that might occur.
#use the finally clause to print a message indicating that the program has finished running.

def compute_average():
  try:
    user_input = input("Enter a list of integers separated by space :")
    numbers = list(map(int, user_input.split()))
    for num in numbers:
      if num < 0:
        raise ValueError("Negative integer found!")
    average = sum(numbers) / len(numbers)
    print("All numbers are non-negative")
    print("List of integers : ", numbers)
    print("Average of list :", average)
  except ValueError:
    print("Invalid input! Please enter integers only.")
  except ZeroDivisionError:
    print("No numbers were provided to calculate the average.")
  finally:
    print("Program has finished running.")

#usage
compute_average()

#Exercise 7: python program that prompts the user to input a filename and writes a string to that file.
#use try-except blocks to handle any exceptions that might occur
#print a welcome message if there is no exception occured.

def write_to_file():
  try:
    file_name = input("Enter the filename: ")
    content = input("Enter the content to write to the file: ")
    with open(file_name, 'w') as file:
      file.write(content)
    print("File written successfully, Welcome!")
  except Exception as e:
    print("An error occured : ", e)

#usage
write_to_file()

